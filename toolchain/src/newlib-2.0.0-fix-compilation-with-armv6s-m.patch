From 7e0be8ca00c95279d89db28044a62157a01652d8 Mon Sep 17 00:00:00 2001
From: Stany MARCEL <stanypub@gmail.com>
Date: Tue, 19 Mar 2013 23:58:34 +0100
Subject: [PATCH] Fix compilation with armv6s-m

---
 newlib/libc/sys/arm/libcfunc.c |   16 ----------------
 newlib/libc/sys/arm/swi.h      |   27 +++++++++++++++++++++++++--
 newlib/libc/sys/arm/syscalls.c |   20 --------------------
 newlib/libc/sys/arm/trap.S     |    3 ++-
 4 files changed, 27 insertions(+), 39 deletions(-)

diff --git a/newlib/libc/sys/arm/libcfunc.c b/newlib/libc/sys/arm/libcfunc.c
index 9fa9cb4..07ea47a 100644
--- a/newlib/libc/sys/arm/libcfunc.c
+++ b/newlib/libc/sys/arm/libcfunc.c
@@ -7,22 +7,6 @@
    to provide libc funcitons as well.  */
 #include "swi.h"
 
-#ifdef ARM_RDI_MONITOR
-
-static inline int
-do_AngelSWI (int reason, void * arg)
-{
-  int value;
-  asm volatile ("mov r0, %1; mov r1, %2; " AngelSWIInsn " %a3; mov %0, r0"
-       : "=r" (value) /* Outputs */
-       : "r" (reason), "r" (arg), "i" (AngelSWI) /* Inputs */
-       : "r0", "r1", "lr"
-		/* Clobbers r0 and r1, and lr if in supervisor mode */);
-  return value;
-}
-#endif /* ARM_RDI_MONITOR */
-
-
 void
 alarm (void)
 {
diff --git a/newlib/libc/sys/arm/swi.h b/newlib/libc/sys/arm/swi.h
index f5c9103..0f93134 100644
--- a/newlib/libc/sys/arm/swi.h
+++ b/newlib/libc/sys/arm/swi.h
@@ -1,3 +1,5 @@
+#include "arm.h"
+
 /* SWI numbers for RDP (Demon) monitor.  */
 #define SWI_WriteC                 0x0
 #define SWI_Write0                 0x2
@@ -33,8 +35,8 @@
 #else
 #define AngelSWI 			AngelSWI_ARM
 #endif
-/* For Thumb-2 code use the BKPT instruction instead of SWI.  */
-#ifdef __thumb2__
+/* For thumb only architectures use the BKPT instruction instead of SWI.  */
+#ifdef THUMB_V7M_V6M
 #define AngelSWIInsn			"bkpt"
 #define AngelSWIAsm			bkpt
 #else
@@ -66,3 +68,24 @@
 #define AngelSWI_Reason_ReportException 0x18
 #define ADP_Stopped_ApplicationExit 	((2 << 16) + 38)
 #define ADP_Stopped_RunTimeError 	((2 << 16) + 35)
+
+#if defined(ARM_RDI_MONITOR) && !defined(__ASSEMBLER__)
+
+static inline int
+do_AngelSWI (int reason, void * arg)
+{
+  int value;
+  asm volatile ("mov r0, %1; mov r1, %2; " AngelSWIInsn " %a3; mov %0, r0"
+       : "=r" (value) /* Outputs */
+       : "r" (reason), "r" (arg), "i" (AngelSWI) /* Inputs */
+       : "r0", "r1", "r2", "r3", "ip", "lr", "memory", "cc"
+		/* Clobbers r0 and r1, and lr if in supervisor mode */);
+                /* Accordingly to page 13-77 of ARM DUI 0040D other registers
+                   can also be clobbered.  Some memory positions may also be
+                   changed by a system call, so they should not be kept in
+                   registers. Note: we are assuming the manual is right and
+                   Angel is respecting the APCS.  */
+  return value;
+}
+
+#endif
diff --git a/newlib/libc/sys/arm/syscalls.c b/newlib/libc/sys/arm/syscalls.c
index f9ac14c..ca50b52 100644
--- a/newlib/libc/sys/arm/syscalls.c
+++ b/newlib/libc/sys/arm/syscalls.c
@@ -94,26 +94,6 @@ findslot (int fh)
   return i;
 }
 
-#ifdef ARM_RDI_MONITOR
-
-static inline int
-do_AngelSWI (int reason, void * arg)
-{
-  int value;
-  asm volatile ("mov r0, %1; mov r1, %2; " AngelSWIInsn " %a3; mov %0, r0"
-       : "=r" (value) /* Outputs */
-       : "r" (reason), "r" (arg), "i" (AngelSWI) /* Inputs */
-       : "r0", "r1", "r2", "r3", "ip", "lr", "memory", "cc"
-		/* Clobbers r0 and r1, and lr if in supervisor mode */);
-                /* Accordingly to page 13-77 of ARM DUI 0040D other registers
-                   can also be clobbered.  Some memory positions may also be
-                   changed by a system call, so they should not be kept in
-                   registers. Note: we are assuming the manual is right and
-                   Angel is respecting the APCS.  */
-  return value;
-}
-#endif /* ARM_RDI_MONITOR */
-
 /* Function to convert std(in|out|err) handles to internal versions.  */
 static int
 remap_handle (int fh)
diff --git a/newlib/libc/sys/arm/trap.S b/newlib/libc/sys/arm/trap.S
index 21b6937..9eb3906 100644
--- a/newlib/libc/sys/arm/trap.S
+++ b/newlib/libc/sys/arm/trap.S
@@ -1,5 +1,6 @@
+#include "arm.h"
         /* Run-time exception support */
-#if !defined(__thumb2__)
+#ifndef THUMB_V7_V6M
 #include "swi.h"
 
 /* .text is used instead of .section .text so it works with arm-aout too.  */
-- 
1.7.10.4

